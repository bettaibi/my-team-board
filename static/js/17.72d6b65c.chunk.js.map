{"version":3,"sources":["hooks/useToggle/index.tsx","hooks/useSnackbar/index.tsx","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","../node_modules/@material-ui/icons/esm/Visibility.js","../node_modules/@material-ui/icons/esm/VisibilityOff.js","pages/auth/Login/index.tsx"],"names":["useToggle","state","useState","show","setShow","toggle","handleOpen","handleClose","useSnackbar","direction","message","open","type","toast","setToast","vertical","horizontal","showMsg","SnackbarComponent","useCallback","autoHideDuration","onClose","anchorOrigin","TransitionComponent","Slide","severity","InputAdornment","React","props","ref","children","classes","className","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","variant","other","_objectWithoutProperties","muiFormControl","useFormControl","FormControlContext","Provider","value","_extends","clsx","root","positionEnd","positionStart","hiddenLabel","filled","margin","marginDense","Typography","color","withStyles","display","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","name","createSvgIcon","d","schema","yup","shape","email","required","password","min","initialValue","LoginForm","loading","setLoading","history","useHistory","values","resetForm","a","axios","post","data","success","setTimeout","push","Fragment","initialValues","validationSchema","onSubmit","handleSubmit","handleChange","handleBlur","errors","touched","autoComplete","MyTextField","placeholder","size","onChange","onBlur","error","helperText","InputProps","endAdornment","IconButton","onClick","Visibility","fontSize","VisibilityOff","Box","mb","to","Fab","disabled","Login","theme","useTheme","matches","useMediaQuery","breakpoints","up","gridBasicStyle","minHeight","Grid","container","item","xs","style","padding","width","pr","sm","md","flexDirection","justifyContent","src","logo","alt","gutterBottom","mt","Welcome"],"mappings":"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","file":"static/js/17.72d6b65c.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nconst useToggle = (state?: boolean) => {\r\n    const [show, setShow] = useState<boolean>(state || false);\r\n\r\n    const toggle = () => {\r\n        setShow(state => !state);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setShow(true);\r\n    };\r\n\r\n    return {\r\n        toggle,\r\n        handleOpen,\r\n        handleClose,\r\n        show\r\n    };\r\n};\r\n\r\nexport default useToggle;","import { useCallback, useState } from \"react\";\r\nimport { \r\n    Snackbar\r\n} from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\ntype Severity = 'error' | 'warning' | 'info' | 'success';\r\n\r\ninterface Direction {\r\n    vertical: 'top' | 'bottom';\r\n    horizontal: 'left' | 'center' | 'right';\r\n}\r\n\r\ninterface ToastState{\r\n    message: string;\r\n    type: Severity;\r\n    open: boolean;\r\n}\r\n\r\nconst useSnackbar = (direction?: Direction) => {\r\n    const [toast, setToast] = useState<ToastState>({message: '', open: false, type: 'success'})\r\n\r\n    function showMsg(message: string, type: Severity): void {\r\n        setToast({message, open: true, type : type});\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setToast({message: '', open: false, type : 'success'});\r\n    };\r\n\r\n    const { vertical, horizontal } = direction || {vertical: 'top', horizontal: 'right'};\r\n\r\n    const SnackbarComponent = useCallback(\r\n        () => (\r\n            <Snackbar \r\n                open={toast.open} \r\n                autoHideDuration={90000} \r\n                onClose={handleClose}\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                key={vertical + horizontal}\r\n                TransitionComponent={Slide}\r\n                >\r\n                <Alert onClose={handleClose} severity={toast.type}>\r\n                    {toast.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        ),\r\n        [toast, vertical, horizontal],\r\n    )\r\n\r\n    return {\r\n        showMsg,\r\n        SnackbarComponent\r\n    };\r\n};\r\n\r\nexport default useSnackbar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import React from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport {\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    IconButton,\r\n    InputAdornment,\r\n    Fab\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { LoginModel } from '../../../models/auth.model';\r\nimport { Formik, Form } from 'formik';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport Welcome from '../../../components/Welcome';\r\nimport logo from '../../../assets/logo48.png';\r\nimport * as yup from 'yup';\r\nimport useToggle from '../../../hooks/useToggle';\r\nimport MyTextField from '../../../components/MyTextField';\r\nimport axios from 'axios';\r\nimport useSnackbar from '../../../hooks/useSnackbar';\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup.string().required('Email is required').email('Invalid Email'),\r\n    password: yup.string().required('Password is required').min(6, 'password is too short')\r\n});\r\n\r\nconst initialValue = { email: '', password: '' };\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\r\n    const gridBasicStyle = { minHeight: '100vh', height: '100%' }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs style={matches ? { padding: '3rem', ...gridBasicStyle } : { padding: '1.5rem', ...gridBasicStyle }}>\r\n                <Box width=\"100%\" pr={{ xs: 0, sm: 3, md: 5 }} height=\"100%\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"flex-start\">\r\n                    <img src={logo} alt=\"app logo\" /> <br />\r\n                    <Typography variant=\"h4\" className=\"fw-700 bg-text-primary\" gutterBottom>\r\n                        Sign in\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                        Don't have an account? &nbsp;\r\n                        <Link to=\"/register\">Sign up</Link>\r\n                    </Typography>\r\n                    <Box mt={1} width=\"100%\">\r\n                        <LoginForm />\r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n            {matches && <Grid item xs={6}>\r\n                <Welcome />\r\n            </Grid>}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst LoginForm = () => {\r\n    const { show, toggle } = useToggle();\r\n    const { SnackbarComponent, showMsg } = useSnackbar();\r\n    const [loading, setLoading] = React.useState<boolean>(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(values: LoginModel, resetForm: () => void) {\r\n        try {\r\n                setLoading(true)\r\n                const { data } = await axios.post(`/auth/login`, values);\r\n                if(data.success) {\r\n                    showMsg(data.message, 'success');\r\n                    resetForm();\r\n                    setTimeout(()=> {\r\n                        history.push('/team')\r\n                    },1000);\r\n                }\r\n                else{\r\n                    setLoading(false);\r\n                    showMsg(data.message, 'error');\r\n                }\r\n        }\r\n        catch (err) {\r\n            setLoading(false);\r\n            showMsg(\"No valid credentials\", 'error');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Formik initialValues={initialValue} validationSchema={schema} onSubmit={(values, { resetForm }) => handleSubmit(values, resetForm)}>\r\n                {\r\n                    ({ handleSubmit, handleChange, handleBlur, errors, values, touched }) => (\r\n                        <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"bg-text-secondary\">Email Address *</label>\r\n                                <MyTextField\r\n                                    className=\"w-100\"\r\n                                    placeholder=\"Enter your email\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    name=\"email\"\r\n                                    value={values.email}\r\n                                    error={touched.email && !!errors.email}\r\n                                    helperText={touched.email && errors.email} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"bg-text-secondary\">Password *</label>\r\n                                <MyTextField\r\n                                    className=\"w-100\"\r\n                                    placeholder=\"Enter your password\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    type={show ? 'text' : 'password'}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    name=\"password\"\r\n                                    value={values.password}\r\n                                    error={touched.password && !!errors.password}\r\n                                    helperText={touched.password && errors.password}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment position=\"end\">\r\n                                            <IconButton size=\"small\" onClick={toggle}>\r\n                                                {show ? <Visibility fontSize=\"small\" /> : <VisibilityOff fontSize=\"small\" />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>,\r\n                                    }} />\r\n                            </div>\r\n                            <Box className=\"text-right\" mb={2}>\r\n                                <Link to='/forgot-password'>Forgot password?</Link>\r\n                            </Box>\r\n\r\n                            <Fab disabled={loading} type=\"submit\" className=\"w-100\" variant=\"extended\" color=\"primary\">{loading?'Loading...':'Sign in'}</Fab>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n            <SnackbarComponent />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}