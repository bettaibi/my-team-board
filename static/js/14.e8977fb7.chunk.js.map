{"version":3,"sources":["hooks/useConfirmDialog/index.tsx","../node_modules/@material-ui/lab/esm/AvatarGroup/AvatarGroup.js","components/MyAccordion/index.tsx","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","../node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js","../node_modules/@material-ui/icons/esm/MailOutline.js","../node_modules/@material-ui/icons/esm/LockOutlined.js","pages/Team/Setting/EmailSetting.tsx","pages/Team/Setting/PasswordSetting.tsx","../node_modules/@material-ui/icons/esm/GroupWorkOutlined.js","pages/Team/Setting/ActiveWorkspaceSetting.tsx","pages/Team/Setting/index.tsx"],"names":["useConfirmDialog","obj","useToggle","show","handleClose","handleOpen","message","onConfirmClick","ConfirmDialog","useCallback","open","onClose","maxWidth","dividers","style","padding","variant","size","onClick","color","SPACINGS","small","medium","AvatarGroup","React","props","ref","childrenProp","children","classes","className","_props$max","max","_props$spacing","spacing","other","_objectWithoutProperties","clampedMax","toArray","filter","child","extraAvatars","length","marginLeft","undefined","_extends","clsx","root","slice","map","index","avatar","zIndex","Avatar","withStyles","theme","display","border","concat","palette","background","default","name","useStyles","makeStyles","createStyles","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","text","secondary","MyAccordion","label","description","isOpen","defaultExpanded","expandIcon","aria-controls","id","InputAdornment","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","muiFormControl","useFormControl","FormControlContext","Provider","value","positionEnd","positionStart","hiddenLabel","filled","margin","marginDense","Typography","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","pointerEvents","DialogContent","_props$dividers","flex","WebkitOverflowScrolling","overflowY","paddingTop","borderTop","divider","borderBottom","DialogActions","_props$disableSpacing","disableSpacing","justifyContent","createSvgIcon","d","schema","yup","shape","email","required","newEmail","password","min","defaultValues","EmailSetting","useMutation","loading","onMutate","useDialog","DialogComponent","onDialogOpen","onDialogClose","values","a","url","method","data","success","console","error","initialValues","validationSchema","onSubmit","submitHandler","handleChange","handleSubmit","handleBlur","touched","errors","Box","p","width","gutterBottom","autoComplete","MyTextField","fullWidth","placeholder","onChange","onBlur","helperText","InputProps","startAdornment","MailOutline","LockOutlined","type","textAlign","RoundedButton","SessionExpired","currentPassword","newPassword","PasswordSetting","cx","cy","r","baseURL","process","RemoveWorspaceContainer","disabled","currentWorkspace","localStorage","removeItem","setTimeout","Fragment","ActiveWorkspaceSetting","useSharedContext","selectedWorkspace","currentUser","dispatch","activeWorkspace","useSelector","state","workspaces","find","item","_id","updateWorkspace","owner","GroupWorkOutlined","Tooltip","title","alt","src","userAvatar","members","Setting"],"mappings":"uHAAA,uEA2CeA,IA7BU,SAACC,GACtB,MAA0CC,cAAlCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,WACnBC,EAA4BL,EAA5BK,QAASC,EAAmBN,EAAnBM,eAEXC,EAAgBC,uBAAY,kBAC9B,eAAC,IAAD,CAAQC,KAAMP,EAAMQ,QAASP,EAAaQ,SAAS,KAAnD,UACI,eAAC,IAAD,CAAeC,UAAQ,EAACC,MAAO,CAACC,QAAS,eAAzC,UACI,cAAC,IAAD,CAAYC,QAAQ,KAApB,qBAGA,+BACKV,OAGT,eAAC,IAAD,WACI,cAAC,IAAD,CAAQW,KAAK,QAAQC,QAASd,EAA9B,mBACA,cAAC,IAAD,CAAQa,KAAK,QAAQD,QAAQ,YAAYG,MAAM,UAC3CD,QAASX,EADb,6BAIT,CAACJ,EAAMG,EAASF,EAAaG,IAEhC,MAAO,CACHH,cACAC,aACAG,mB,iCCvCR,8DASIY,EAAW,CACbC,OAAQ,GACRC,OAAQ,MAmBNC,EAA2BC,cAAiB,SAAqBC,EAAOC,GAC1E,IAAIC,EAAeF,EAAMG,SACrBC,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBC,EAAaN,EAAMO,IACnBA,OAAqB,IAAfD,EAAwB,EAAIA,EAClCE,EAAiBR,EAAMS,QACvBA,OAA6B,IAAnBD,EAA4B,SAAWA,EACjDE,EAAQC,YAAyBX,EAAO,CAAC,WAAY,UAAW,YAAa,MAAO,YAEpFY,EAAaL,EAAM,EAAI,EAAIA,EAC3BJ,EAAWJ,WAAec,QAAQX,GAAcY,QAAO,SAAUC,GAOnE,OAAoBhB,iBAAqBgB,MAEvCC,EAAeb,EAASc,OAASL,EAAaT,EAASc,OAASL,EAAa,EAAI,EACjFM,EAAaT,QAAiCU,IAAtBxB,EAASc,GAAyBd,EAASc,IAAYA,EACnF,OAAoBV,gBAAoB,MAAOqB,YAAS,CACtDf,UAAWgB,YAAKjB,EAAQkB,KAAMjB,GAC9BJ,IAAKA,GACJS,GAAQP,EAASoB,MAAM,EAAGpB,EAASc,OAASD,GAAcQ,KAAI,SAAUT,EAAOU,GAChF,OAAoB1B,eAAmBgB,EAAO,CAC5CV,UAAWgB,YAAKN,EAAMf,MAAMK,UAAWD,EAAQsB,QAC/CrC,MAAO+B,YAAS,CACdO,OAAQxB,EAASc,OAASQ,EAC1BP,WAAsB,IAAVO,OAAcN,EAAYD,GACrCH,EAAMf,MAAMX,YAEf2B,EAA4BjB,gBAAoB6B,IAAQ,CAC1DvB,UAAWD,EAAQsB,OACnBrC,MAAO,CACLsC,OAAQ,EACRT,WAAYA,IAEb,IAAKF,GAAgB,SAsCXa,iBA9FK,SAAgBC,GAClC,MAAO,CAELR,KAAM,CACJS,QAAS,QAIXL,OAAQ,CACNM,OAAQ,aAAaC,OAAOH,EAAMI,QAAQC,WAAWC,SACrDlB,YAAa,EACb,gBAAiB,CACfA,WAAY,OAkFc,CAChCmB,KAAM,kBADOR,CAEZ/B,I,iCC7GH,uFAUMwC,EAAYC,aAAW,SAACT,GAAD,OAC3BU,YAAa,CACXC,QAAS,CACLC,SAAUZ,EAAMa,WAAWC,QAAQ,IACnCC,UAAW,SACXC,WAAY,GAEhBC,iBAAkB,CACdL,SAAUZ,EAAMa,WAAWC,QAAQ,IACnClD,MAAOoC,EAAMI,QAAQc,KAAKC,gBA8BnBC,IArBiC,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,YAAajD,EAAsB,EAAtBA,SAAUkD,EAAY,EAAZA,OACtEjD,EAAUkC,IAEhB,OACQ,eAAC,IAAD,CAAWgB,gBAAmBD,IAAU,EAAxC,UACI,eAAC,IAAD,CACIE,WAAY,cAAC,IAAD,IACZC,gBAAc,kBACdC,GAAG,iBAHP,UAII,cAAC,IAAD,CAAYpD,UAAWD,EAAQqC,QAA/B,SAAyCU,IACxCC,GAAe,cAAC,IAAD,CAAY/C,UAAWD,EAAQ2C,iBAA/B,SAAkDK,OAEtE,cAAC,IAAD,UAEOjD,S,iCC1CvB,gEA+CIuD,EAA8B3D,cAAiB,SAAwBC,EAAOC,GAChF,IAAIE,EAAWH,EAAMG,SACjBC,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBsD,EAAmB3D,EAAM4D,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAwB9D,EAAM+D,qBAC9BA,OAAiD,IAA1BD,GAA2CA,EAClEE,EAAwBhE,EAAMiE,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAWlE,EAAMkE,SACjBC,EAAcnE,EAAMT,QACpBmB,EAAQC,YAAyBX,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,YAEnJoE,EAAiBC,eAAoB,GACrC9E,EAAU4E,EAcd,OAZIA,GAAeC,EAAe7E,QAQ9B6E,IAAmB7E,IACrBA,EAAU6E,EAAe7E,SAGPQ,gBAAoBuE,IAAmBC,SAAU,CACnEC,MAAO,MACOzE,gBAAoB8D,EAAWzC,YAAS,CACtDf,UAAWgB,YAAKjB,EAAQkB,KAAMjB,EAAwB,QAAb6D,EAAqB9D,EAAQqE,YAAcrE,EAAQsE,cAAeX,GAAwB3D,EAAQ2D,qBAAsBK,EAAeO,aAAevE,EAAQuE,YAAyB,WAAZpF,GAAwBa,EAAQwE,OAAkC,UAA1BR,EAAeS,QAAsBzE,EAAQ0E,aACzS7E,IAAKA,GACJS,GAA4B,kBAAbP,GAA0B8D,EAE7B9D,EAF8DJ,gBAAoBgF,IAAY,CAC3GrF,MAAO,iBACNS,QAuDU0B,gBAlIK,CAElBP,KAAM,CACJS,QAAS,OACTiD,OAAQ,SAERC,UAAW,MACXC,WAAY,SACZC,WAAY,UAIdP,OAAQ,CACN,oCAAqC,CACnCQ,UAAW,KAKfV,cAAe,CACbW,YAAa,GAIfZ,YAAa,CACXvD,WAAY,GAId6C,qBAAsB,CACpBuB,cAAe,QAIjBX,YAAa,GAGbG,YAAa,IA6FmB,CAChCzC,KAAM,qBADOR,CAEZ6B,I,iCC5IH,+CA6BI6B,EAA6BxF,cAAiB,SAAuBC,EAAOC,GAC9E,IAAIG,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBmF,EAAkBxF,EAAMZ,SACxBA,OAA+B,IAApBoG,GAAqCA,EAChD9E,EAAQC,YAAyBX,EAAO,CAAC,UAAW,YAAa,aAErE,OAAoBD,gBAAoB,MAAOqB,YAAS,CACtDf,UAAWgB,YAAKjB,EAAQkB,KAAMjB,EAAWjB,GAAYgB,EAAQhB,UAC7Da,IAAKA,GACJS,OA6BUmB,iBA9DK,SAAgBC,GAClC,MAAO,CAELR,KAAM,CACJmE,KAAM,WACNC,wBAAyB,QAEzBC,UAAW,OACXrG,QAAS,WACT,gBAAiB,CAEfsG,WAAY,KAKhBxG,SAAU,CACRE,QAAS,YACTuG,UAAW,aAAa5D,OAAOH,EAAMI,QAAQ4D,SAC7CC,aAAc,aAAa9D,OAAOH,EAAMI,QAAQ4D,aA2CpB,CAChCzD,KAAM,oBADOR,CAEZ0D,I,iCCtEH,+CAuBIS,EAA6BjG,cAAiB,SAAuBC,EAAOC,GAC9E,IAAIgG,EAAwBjG,EAAMkG,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5D7F,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBK,EAAQC,YAAyBX,EAAO,CAAC,iBAAkB,UAAW,cAE1E,OAAoBD,gBAAoB,MAAOqB,YAAS,CACtDf,UAAWgB,YAAKjB,EAAQkB,KAAMjB,GAAY6F,GAAkB9F,EAAQK,SACpER,IAAKA,GACJS,OA6BUmB,gBAxDK,CAElBP,KAAM,CACJS,QAAS,OACTmD,WAAY,SACZ5F,QAAS,EACT6G,eAAgB,WAChBV,KAAM,YAIRhF,QAAS,CACP,yBAA0B,CACxBS,WAAY,KA2CgB,CAChCmB,KAAM,oBADOR,CAEZmE,I,kIC9DYI,cAA4BrG,gBAAoB,OAAQ,CACrEsG,EAAG,+HACD,eCFWD,cAA4BrG,gBAAoB,OAAQ,CACrEsG,EAAG,gOACD,gB,qECeEC,EAASC,MAAaC,MAAM,CAC9BC,MAAOF,MAAaG,SAAS,qBAAqBD,MAAM,iBACxDE,SAAUJ,MAAaG,SAAS,qBAAqBD,MAAM,iBAC3DG,SAAUL,MAAaG,SAAS,wBAAwBG,IAAI,EAAG,gBAG7DC,EAAgB,CAClBL,MAAO,GACPE,SAAU,GACVC,SAAU,IA+HCG,EA5HM,WACjB,MAA8BC,cAAtBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SACjB,EAAyDC,cAAjDC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,cAFhB,4CAKvB,WAA6BC,GAA7B,SAAAC,EAAA,+EAE0BN,EAAS,CACvBO,IAAI,kBACJC,OAAQ,MACRC,KAAMJ,IALlB,cAQeK,SACHP,IATZ,gDAaQQ,QAAQC,MAAR,MAbR,0DALuB,sBAsBvB,OACI,qCACA,cAAC,IAAD,CAAQC,cAAejB,EAAekB,iBAAkB1B,EAAQ2B,SAAU,SAACV,GAAD,OAxBvD,2CAwBmEW,CAAcX,IAApG,SAEQ,gBAAGY,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,WAAYd,EAA3C,EAA2CA,OAAQe,EAAnD,EAAmDA,QAASC,EAA5D,EAA4DA,OAA5D,OACI,eAACC,EAAA,EAAD,CAAKC,EAAG,EAAGC,MAAM,OAAjB,UACI,cAAC3D,EAAA,EAAD,CAAYxF,QAAQ,KAAKc,UAAU,yBAAyBsI,cAAY,EAAxE,qBAGA,cAAC5D,EAAA,EAAD,CAAYxF,QAAQ,YAApB,4BAGA,cAACwF,EAAA,EAAD,CAAYxF,QAAQ,QAAQG,MAAM,gBAAgBiJ,cAAY,EAA9D,6CAIA,eAAC,IAAD,CAAMV,SAAUG,EAAcQ,aAAa,MAA3C,UACA,sBAAKvI,UAAU,aAAf,UACI,uBAAOA,UAAU,oBAAjB,6BACA,cAACwI,EAAA,EAAD,CACIC,WAAS,EACTC,YAAY,mBACZxJ,QAAQ,WACRC,KAAK,QACLwJ,SAAUb,EACVc,OAAQZ,EACRhG,KAAK,QACLmC,MAAO+C,EAAOd,MACdqB,MAASQ,EAAQ7B,SAAW8B,EAAO9B,MACnCyC,WAAcZ,EAAQ7B,OAAS8B,EAAO9B,MACtC0C,WAAY,CACRC,eACE,cAAC1F,EAAA,EAAD,CAAgBQ,SAAS,QAAzB,SACE,cAACmF,EAAD,CAAahJ,UAAU,kBAOvC,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,oBAAjB,yBACA,cAACwI,EAAA,EAAD,CACIC,WAAS,EACTC,YAAY,oBACZxJ,QAAQ,WACRC,KAAK,QACLwJ,SAAUb,EACVc,OAAQZ,EACRhG,KAAK,WACLmC,MAAO+C,EAAOZ,SACdmB,MAASQ,EAAQ3B,YAAc4B,EAAO5B,SACtCuC,WAAcZ,EAAQ3B,UAAY4B,EAAO5B,SACzCwC,WAAY,CACRC,eACE,cAAC1F,EAAA,EAAD,CAAgBQ,SAAS,QAAzB,SACE,cAACoF,EAAD,CAAcjJ,UAAU,kBAOxC,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,oBAAjB,wBACA,cAACwI,EAAA,EAAD,CACIC,WAAS,EACTS,KAAK,WACLR,YAAY,sBACZxJ,QAAQ,WACRC,KAAK,QACLwJ,SAAUb,EACVc,OAAQZ,EACRhG,KAAK,WACLmC,MAAO+C,EAAOX,SACdkB,MAASQ,EAAQ1B,YAAc2B,EAAO3B,SACtCsC,WAAcZ,EAAQ1B,UAAY2B,EAAO3B,SACzCuC,WAAY,CACRC,eACE,cAAC1F,EAAA,EAAD,CAAgBQ,SAAS,QAAzB,SACE,cAACoF,EAAD,CAAcjJ,UAAU,kBAKpC,cAACmI,EAAA,EAAD,CAAKgB,UAAU,QAAf,SACI,cAACC,EAAA,EAAD,CAAelK,QAAQ,YAAYG,MAAM,UAAU6J,KAAK,SAAxD,SACItC,EAAU,aAAe,oBAQrD,cAACG,EAAD,UACI,cAACsC,EAAA,EAAD,CAAgBpC,cAAiBA,UCnIvChB,EAASC,MAAaC,MAAM,CAC9BmD,gBAAiBpD,MAAaG,SAAS,wBAAwBG,IAAI,EAAG,cACtE+C,YAAarD,MAAaG,SAAS,wBAAwBG,IAAI,EAAG,gBAGhEC,EAAgB,CAClB6C,gBAAiB,GACjBC,YAAa,IAwGFC,EArGS,WACpB,MAA8B7C,cAAtBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SACjB,EAAyDC,cAAjDC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,cAFb,4CAI1B,WAA6BC,GAA7B,SAAAC,EAAA,+EAE0BN,EAAS,CACvBO,IAAI,qBACJC,OAAQ,MACRC,KAAMJ,IALlB,cAQeK,SACHP,IATZ,gDAaQQ,QAAQC,MAAR,MAbR,0DAJ0B,sBAqB1B,OACI,qCACA,cAAC,IAAD,CAAQC,cAAejB,EAAekB,iBAAkB1B,EAAQ2B,SAAU,SAACV,GAAD,OAvBpD,2CAuBgEW,CAAcX,IAApG,SAEQ,gBAAGY,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,WAAYd,EAA3C,EAA2CA,OAAQe,EAAnD,EAAmDA,QAASC,EAA5D,EAA4DA,OAA5D,OACI,eAACC,EAAA,EAAD,CAAKC,EAAG,EAAGC,MAAM,OAAjB,UACI,cAAC3D,EAAA,EAAD,CAAYxF,QAAQ,KAAKc,UAAU,yBAAyBsI,cAAY,EAAxE,sBAGA,cAAC5D,EAAA,EAAD,CAAYxF,QAAQ,YAApB,kCAGA,cAACwF,EAAA,EAAD,CAAYxF,QAAQ,QAAQG,MAAM,gBAAgBiJ,cAAY,EAA9D,sEAIA,eAAC,IAAD,CAAMV,SAAUG,EAAcQ,aAAa,MAA3C,UAEA,sBAAKvI,UAAU,aAAf,UACI,uBAAOA,UAAU,oBAAjB,gCACA,cAACwI,EAAA,EAAD,CACIC,WAAS,EACTS,KAAK,WACLR,YAAY,sBACZxJ,QAAQ,WACRC,KAAK,QACLwJ,SAAUb,EACVc,OAAQZ,EACRhG,KAAK,kBACLmC,MAAO+C,EAAOoC,gBACd7B,MAASQ,EAAQqB,mBAAqBpB,EAAOoB,gBAC7CT,WAAcZ,EAAQqB,iBAAmBpB,EAAOoB,gBAChDR,WAAY,CACRC,eACE,cAAC1F,EAAA,EAAD,CAAgBQ,SAAS,QAAzB,SACE,cAACoF,EAAD,CAAcjJ,UAAU,kBAMxC,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,oBAAjB,4BACA,cAACwI,EAAA,EAAD,CACIC,WAAS,EACTS,KAAK,WACLR,YAAY,sBACZxJ,QAAQ,WACRC,KAAK,QACLwJ,SAAUb,EACVc,OAAQZ,EACRhG,KAAK,cACLmC,MAAO+C,EAAOqC,YACd9B,MAASQ,EAAQsB,eAAiBrB,EAAOqB,YACzCV,WAAcZ,EAAQsB,aAAerB,EAAOqB,YAC5CT,WAAY,CACRC,eACE,cAAC1F,EAAA,EAAD,CAAgBQ,SAAS,QAAzB,SACE,cAACoF,EAAD,CAAcjJ,UAAU,kBAKpC,cAACmI,EAAA,EAAD,CAAKgB,UAAU,QAAf,SACI,cAACC,EAAA,EAAD,CAAelK,QAAQ,YAAYG,MAAM,UAAU6J,KAAK,SAAxD,SACItC,EAAU,aAAe,oBAQrD,cAACG,EAAD,UACI,cAACsC,EAAA,EAAD,CAAgBpC,cAAiBA,U,yBCzH9BlB,cAA4BrG,gBAAoBA,WAAgB,KAAmBA,gBAAoB,OAAQ,CAC5HsG,EAAG,iIACYtG,gBAAoB,SAAU,CAC7C+J,GAAI,IACJC,GAAI,KACJC,EAAG,MACYjK,gBAAoB,SAAU,CAC7C+J,GAAI,KACJC,GAAI,IACJC,EAAG,MACYjK,gBAAoB,SAAU,CAC7C+J,GAAI,KACJC,GAAI,KACJC,EAAG,OACA,qB,qDCWCC,EAAUC,0CAEV5D,EAASC,MAAaC,MAAM,CAC9BnE,KAAMkE,MAAaG,SAAS,sBAwH1ByD,EAAkE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBACjF,EAAmD9L,YAAiB,CAChEO,eAFoG,2CAGpGD,QAAS,uGAFLE,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,WAAYD,EAAnC,EAAmCA,YAInC,EAA8BqI,cAAtBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SACjB,EAAyDC,cAAjDC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,cANiE,4CAQxG,sBAAAE,EAAA,+EAE0BN,EAAS,CACvBO,IAAI,cAAD,OAAgB4C,GACnB3C,OAAQ,WAJpB,cAOgBE,UACHjJ,IACA2L,aAAaC,WAAW,aAExBC,YAAW,WACRnD,QAZhB,gDAiBQQ,QAAQC,MAAR,MAjBR,0DARwG,sBA6BxG,OAAKuC,EAGD,eAAC,IAAMI,SAAP,WACI,cAAChB,EAAA,EAAD,CAAelK,QAAQ,YAAYG,MAAM,YAAYD,QAASb,EAC1DS,MAAO,CAAEgG,YAAa,UAAY+E,SAAUA,EADhD,SAGKnD,EAAU,aAAe,WAE9B,cAAClI,EAAD,IACA,cAACqI,EAAD,UACI,cAACsC,EAAA,EAAD,CAAgBpC,cAAiBA,SAXf,MAiBnBoD,EAnKgB,WAC3B,MAAqDC,cAA7CC,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,YAAaC,EAAxC,EAAwCA,SACxC,EAA8B9D,cAAtBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SACX6D,EAAkBC,aAAY,SAACC,GAAD,OAAqBA,EAAMC,cAC1DC,MAAK,SAACC,GAAD,OAA0BA,EAAKC,MAAQT,KAE7C9D,EAAgB,CAChBzE,KAAM,IAEN+H,GAAW,EATkB,4CAkBjC,WAA6B7C,GAA7B,eAAAC,EAAA,mEAEYuD,EAFZ,gCAG8B7D,EAAS,CACvBO,IAAI,cAAD,OAAgBmD,GACnBlD,OAAQ,MACRC,KAAM,CAAEtF,KAAMkF,EAAOlF,QANrC,cAQoBuF,UACEpJ,EADO,2BACIuM,GADJ,IACqB1I,KAAMkF,EAAOlF,OAC/CyI,EAASQ,YAAgB9M,KAVzC,uDAeQqJ,QAAQC,MAAR,MAfR,0DAlBiC,sBAqCjC,OA1BIiD,IACAjE,EAAgB,CACZzE,KAAM0I,EAAgB1I,MAE1B+H,IAAaW,EAAgBQ,MAAMF,MAAQR,EAAYQ,MAuBvD,cAAC,IAAD,CAAQtD,cAAejB,EAAekB,iBAAkB1B,EAAQ2B,SAAU,SAACV,GAAD,OAtC7C,2CAsCyDW,CAAcX,IAApG,SAEQ,gBAAGY,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,WAAYd,EAA3C,EAA2CA,OAAQe,EAAnD,EAAmDA,QAASC,EAA5D,EAA4DA,OAA5D,OACI,eAACC,EAAA,EAAD,CAAKC,EAAG,EAAGC,MAAM,OAAjB,UACI,cAAC3D,EAAA,EAAD,CAAYxF,QAAQ,KAAKc,UAAU,yBAAyBsI,cAAY,EAAxE,8BAGA,cAAC5D,EAAA,EAAD,CAAYxF,QAAQ,YAApB,gCAGA,cAACwF,EAAA,EAAD,CAAYxF,QAAQ,QAAQG,MAAM,gBAAgBiJ,cAAY,EAA9D,yEAIA,eAAC,IAAD,CAAMV,SAAUG,EAAcQ,aAAa,MAA3C,UAEI,sBAAKvI,UAAU,aAAf,UACI,uBAAOA,UAAU,oBAAjB,oBACA,cAACwI,EAAA,EAAD,CACIuB,SAAUA,EACVtB,WAAS,EACTC,YAAY,iBACZxJ,QAAQ,WACRC,KAAK,QACLwJ,SAAUb,EACVc,OAAQZ,EACRhG,KAAK,OACLmC,MAAO+C,EAAOlF,KACdyF,MAAOQ,EAAQjG,QAAUkG,EAAOlG,KAChC6G,WAAYZ,EAAQjG,MAAQkG,EAAOlG,KACnC8G,WAAY,CACRC,eACI,cAAC1F,EAAA,EAAD,CAAgBQ,SAAS,QAAzB,SACI,cAACsH,EAAD,CAAmBnL,UAAU,kBAKjD,eAACmI,EAAA,EAAD,CAAKnI,UAAU,aAAf,UACI,uBAAOA,UAAU,oBAAjB,6BAEI0K,GAAoB,mCAChB,cAACU,EAAA,EAAD,CAASC,MAAOX,EAAgBQ,MAAMlJ,KAAtC,SACI,cAACT,EAAA,EAAD,CAAQ+J,IAAI,cAAcC,IAAKb,EAAgBQ,MAAM7J,OAAtB,UAAkCuI,EAAlC,kBAAmDc,EAAgBQ,MAAM7J,QAAWmK,aAKnI,eAACrD,EAAA,EAAD,CAAKnI,UAAU,aAAf,UACI,uBAAOA,UAAU,oBAAjB,+BACA,cAACP,EAAA,EAAD,CAAaS,IAAK,EAAlB,SAEQwK,GAAmBA,EAAgBe,QAAQtK,KAAI,SAAC4J,GAAD,OAC3C,cAACK,EAAA,EAAD,CAAwBC,MAAON,EAAK/I,KAApC,SACI,cAACT,EAAA,EAAD,CAAQ+J,IAAI,gBAAgBC,IAAKR,EAAK1J,OAAL,UAAiBuI,EAAjB,kBAAkCmB,EAAK1J,QAAWmK,OADzET,EAAKC,aAOnC,eAAC7C,EAAA,EAAD,CAAKgB,UAAU,QAAf,UACI,cAAC,EAAD,CAAyBY,SAAUA,EAAUC,iBAAkBO,IAE/D,cAACnB,EAAA,EAAD,CAAelK,QAAQ,YAAYG,MAAM,UAAU6J,KAAK,SAAxD,SACKtC,EAAU,aAAe,sBCxG/C8E,UArBW,WAEtB,OAEI,eAACvD,EAAA,EAAD,CAAKC,EAAG,EAAR,UAEI,cAACvF,EAAA,EAAD,CAAaC,MAAM,oBAAoBE,QAAU,EAAjD,SACI,cAAC,EAAD,MAGJ,cAACH,EAAA,EAAD,CAAaC,MAAM,kBAAnB,SACI,cAAC,EAAD,MAGJ,cAACD,EAAA,EAAD,CAAaC,MAAM,WAAnB,SACG,cAAC,EAAD","file":"static/js/14.e8977fb7.chunk.js","sourcesContent":["import { useCallback } from 'react';\r\nimport {\r\n    Typography,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    Button\r\n} from '@material-ui/core';\r\nimport useToggle from '../useToggle';\r\n\r\ninterface ConfirmDialogProps {\r\n    message: string;\r\n    onConfirmClick: () => void;\r\n}\r\nconst useConfirmDialog = (obj: ConfirmDialogProps) => {\r\n    const { show, handleClose, handleOpen } = useToggle();\r\n    const { message, onConfirmClick } = obj;\r\n\r\n    const ConfirmDialog = useCallback(() => (\r\n        <Dialog open={show} onClose={handleClose} maxWidth=\"xs\">\r\n            <DialogContent dividers style={{padding: '1.2rem 1rem'}}>\r\n                <Typography variant=\"h6\" >\r\n                    Confirm\r\n                </Typography>\r\n                <span>\r\n                    {message}\r\n                </span>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button size=\"small\" onClick={handleClose}>Close</Button>\r\n                <Button size=\"small\" variant=\"contained\" color=\"primary\"\r\n                    onClick={onConfirmClick}>Confirm</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    ), [show, message, handleClose, onConfirmClick]);\r\n\r\n    return {\r\n        handleClose,\r\n        handleOpen,\r\n        ConfirmDialog\r\n    }\r\n};\r\n\r\nexport default useConfirmDialog;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { chainPropTypes } from '@material-ui/utils';\nvar SPACINGS = {\n  small: -16,\n  medium: null\n};\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the avatar elements. */\n    avatar: {\n      border: \"2px solid \".concat(theme.palette.background.default),\n      marginLeft: -8,\n      '&:first-child': {\n        marginLeft: 0\n      }\n    }\n  };\n};\nvar AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 5 : _props$max,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 'medium' : _props$spacing,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"max\", \"spacing\"]);\n\n  var clampedMax = max < 2 ? 2 : max;\n  var children = React.Children.toArray(childrenProp).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  var extraAvatars = children.length > clampedMax ? children.length - clampedMax + 1 : 0;\n  var marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children.slice(0, children.length - extraAvatars).map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(child.props.className, classes.avatar),\n      style: _extends({\n        zIndex: children.length - index,\n        marginLeft: index === 0 ? undefined : marginLeft\n      }, child.props.style)\n    });\n  }), extraAvatars ? /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    style: {\n      zIndex: 0,\n      marginLeft: marginLeft\n    }\n  }, \"+\", extraAvatars) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Max avatars to show before +x.\n   */\n  max: chainPropTypes(PropTypes.number, function (props) {\n    if (props.max < 2) {\n      throw new Error(['Material-UI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n  }),\n\n  /**\n   * Spacing between avatars.\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatarGroup'\n})(AvatarGroup);","import React from 'react';\r\nimport {\r\n    Accordion,\r\n    Typography,\r\n    AccordionSummary,\r\n    AccordionDetails\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    }\r\n  }),\r\n);\r\ninterface MyAccordionProps{\r\n    label: string;\r\n    description?: string;\r\n    isOpen?: boolean;\r\n}\r\nconst MyAccordion: React.FC<MyAccordionProps> = ({label, description, children, isOpen}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n            <Accordion defaultExpanded = {isOpen || false}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\">\r\n                    <Typography className={classes.heading}>{label}</Typography>\r\n                    {description && <Typography className={classes.secondaryHeading}>{description}</Typography>}\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                   {\r\n                       children\r\n                   }\r\n                </AccordionDetails>\r\n            </Accordion>\r\n    )\r\n}\r\n\r\nexport default MyAccordion;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');","import React from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    InputAdornment \r\n} from '@material-ui/core';\r\nimport { \r\n    MailOutline,\r\n    LockOutlined\r\n} from '@material-ui/icons';\r\n\r\nimport { Formik, Form } from 'formik';\r\nimport useMutation from '../../../hooks/useMutation';\r\nimport MyTextField from '../../../components/MyTextField';\r\nimport RoundedButton from '../../../components/RoundedButton';\r\nimport * as yup from 'yup';\r\nimport useDialog from '../../../hooks/useDialog';\r\nimport SessionExpired from './SessionExpired';\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup.string().required('Email is required').email('Invalid Email'),\r\n    newEmail: yup.string().required('Email is required').email('Invalid Email'),\r\n    password: yup.string().required('Password is required').min(6, 'too short!')\r\n\r\n});\r\nconst defaultValues = {\r\n    email: '',\r\n    newEmail: '',\r\n    password: ''\r\n};\r\n\r\nconst EmailSetting = () => {\r\n    const { loading, onMutate } = useMutation();\r\n    const { DialogComponent, onDialogOpen, onDialogClose } = useDialog();\r\n\r\n\r\n    async function submitHandler(values: any) {\r\n        try{\r\n            const res = await onMutate({\r\n                url: `/settings/email`,\r\n                method: 'PUT',\r\n                data: values,\r\n            });\r\n\r\n            if(res.success){\r\n                onDialogOpen();\r\n            }\r\n        }\r\n        catch(err){\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Formik initialValues={defaultValues} validationSchema={schema} onSubmit={(values) => submitHandler(values)}>\r\n            {\r\n                ({ handleChange, handleSubmit, handleBlur, values, touched, errors }) => (\r\n                    <Box p={2} width=\"100%\">\r\n                        <Typography variant=\"h6\" className=\"bg-text-primary fw-700\" gutterBottom>\r\n                             Account\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\">\r\n                             Email Settings\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n                             Manage your private information\r\n                        </Typography>\r\n\r\n                        <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"bg-text-secondary\">Email Address *</label>\r\n                            <MyTextField\r\n                                fullWidth\r\n                                placeholder=\"Enter your email\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                name=\"email\"\r\n                                value={values.email}\r\n                                error = {touched.email && !!errors.email} \r\n                                helperText = {touched.email && errors.email}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                      <InputAdornment position=\"start\">\r\n                                        <MailOutline className=\"icons\" />\r\n                                      </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label className=\"bg-text-secondary\">New Email *</label>\r\n                            <MyTextField\r\n                                fullWidth\r\n                                placeholder=\"Enter a new email\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                name=\"newEmail\"\r\n                                value={values.newEmail}\r\n                                error = {touched.newEmail && !!errors.newEmail} \r\n                                helperText = {touched.newEmail && errors.newEmail} \r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                      <InputAdornment position=\"start\">\r\n                                        <LockOutlined className=\"icons\" />\r\n                                      </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label className=\"bg-text-secondary\">Password *</label>\r\n                            <MyTextField\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                placeholder=\"Enter your password\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                name=\"password\"\r\n                                value={values.password}\r\n                                error = {touched.password && !!errors.password} \r\n                                helperText = {touched.password && errors.password}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                      <InputAdornment position=\"start\">\r\n                                        <LockOutlined className=\"icons\" />\r\n                                      </InputAdornment>\r\n                                    ),\r\n                                }} />\r\n                        </div>\r\n                            <Box textAlign=\"right\">\r\n                                <RoundedButton variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                                   {loading ? 'Loading...' : 'Save'}\r\n                                </RoundedButton>\r\n                            </Box>\r\n                        </Form>\r\n                    </Box>\r\n                )\r\n            }\r\n        </Formik>\r\n        <DialogComponent>\r\n            <SessionExpired onDialogClose = {onDialogClose} />\r\n        </DialogComponent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmailSetting;\r\n","import React from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    InputAdornment \r\n} from '@material-ui/core';\r\nimport { \r\n    LockOutlined\r\n} from '@material-ui/icons';\r\n\r\nimport { Formik, Form } from 'formik';\r\nimport useMutation from '../../../hooks/useMutation';\r\nimport MyTextField from '../../../components/MyTextField';\r\nimport RoundedButton from '../../../components/RoundedButton';\r\nimport * as yup from 'yup';\r\nimport useDialog from '../../../hooks/useDialog';\r\nimport SessionExpired from './SessionExpired';\r\n\r\nconst schema = yup.object().shape({\r\n    currentPassword: yup.string().required('Password is required').min(6, 'too short!'),\r\n    newPassword: yup.string().required('Password is required').min(6, 'too short!')\r\n});\r\n\r\nconst defaultValues = {\r\n    currentPassword: '',\r\n    newPassword: ''\r\n};\r\n\r\nconst PasswordSetting = () => {\r\n    const { loading, onMutate } = useMutation();\r\n    const { DialogComponent, onDialogOpen, onDialogClose } = useDialog();\r\n\r\n    async function submitHandler(values: any) {\r\n        try{\r\n            const res = await onMutate({\r\n                url: `/settings/password`,\r\n                method: 'PUT',\r\n                data: values,\r\n            });\r\n\r\n            if(res.success){\r\n                onDialogOpen();\r\n            }\r\n        }\r\n        catch(err){\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Formik initialValues={defaultValues} validationSchema={schema} onSubmit={(values) => submitHandler(values)}>\r\n            {\r\n                ({ handleChange, handleSubmit, handleBlur, values, touched, errors }) => (\r\n                    <Box p={2} width=\"100%\">\r\n                        <Typography variant=\"h6\" className=\"bg-text-primary fw-700\" gutterBottom>\r\n                          Security\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\">\r\n                          Change your password\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n                            You can only change your password twice within 24 hours!\r\n                        </Typography>\r\n\r\n                        <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n\r\n                        <div className=\"form-group\">\r\n                            <label className=\"bg-text-secondary\">Current password *</label>\r\n                            <MyTextField\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                placeholder=\"Enter your password\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                name=\"currentPassword\"\r\n                                value={values.currentPassword}\r\n                                error = {touched.currentPassword && !!errors.currentPassword} \r\n                                helperText = {touched.currentPassword && errors.currentPassword}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                      <InputAdornment position=\"start\">\r\n                                        <LockOutlined className=\"icons\" />\r\n                                      </InputAdornment>\r\n                                    ),\r\n                                }} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label className=\"bg-text-secondary\">New password *</label>\r\n                            <MyTextField\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                placeholder=\"Enter your password\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                name=\"newPassword\"\r\n                                value={values.newPassword}\r\n                                error = {touched.newPassword && !!errors.newPassword} \r\n                                helperText = {touched.newPassword && errors.newPassword}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                      <InputAdornment position=\"start\">\r\n                                        <LockOutlined className=\"icons\" />\r\n                                      </InputAdornment>\r\n                                    ),\r\n                                }} />\r\n                        </div>\r\n                            <Box textAlign=\"right\">\r\n                                <RoundedButton variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                                   {loading ? 'Loading...' : 'Save'}\r\n                                </RoundedButton>\r\n                            </Box>\r\n                        </Form>\r\n                    </Box>\r\n                )\r\n            }\r\n        </Formik>\r\n        <DialogComponent>\r\n            <SessionExpired onDialogClose = {onDialogClose} />\r\n        </DialogComponent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PasswordSetting;\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"8\",\n  cy: \"14\",\n  r: \"2\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"8\",\n  r: \"2\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"16\",\n  cy: \"14\",\n  r: \"2\"\n})), 'GroupWorkOutlined');","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    InputAdornment,\r\n    Avatar,\r\n    Tooltip\r\n} from '@material-ui/core';\r\nimport {\r\n    GroupWorkOutlined\r\n} from '@material-ui/icons';\r\n\r\nimport MyTextField from '../../../components/MyTextField';\r\nimport RoundedButton from '../../../components/RoundedButton';\r\nimport * as yup from 'yup';\r\nimport { useSharedContext } from '../../../context';\r\nimport { AppState, UserModel, WorkspaceModel } from '../../../models/app.model';\r\nimport { useSelector } from 'react-redux';\r\nimport useMutation from '../../../hooks/useMutation';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport userAvatar from '../../../assets/avatars/profile.jpg';\r\nimport useConfirmDialog from '../../../hooks/useConfirmDialog';\r\nimport { updateWorkspace } from '../../../store/actions/workspace.actions';\r\nimport SessionExpired from './SessionExpired';\r\nimport useDialog from '../../../hooks/useDialog';\r\n\r\nconst baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().required('Name is required')\r\n});\r\n\r\nconst ActiveWorkspaceSetting = () => {\r\n    const { selectedWorkspace, currentUser, dispatch } = useSharedContext();\r\n    const { loading, onMutate } = useMutation();\r\n    const activeWorkspace = useSelector((state: AppState) => state.workspaces)\r\n        .find((item: WorkspaceModel) => item._id === selectedWorkspace);\r\n\r\n    let defaultValues = {\r\n        name: '',\r\n    };\r\n    let disabled = true;\r\n\r\n    if (activeWorkspace) {\r\n        defaultValues = {\r\n            name: activeWorkspace.name,\r\n        };\r\n        disabled = !(activeWorkspace.owner._id === currentUser._id);\r\n    }\r\n\r\n    async function submitHandler(values: any) {\r\n        try {\r\n            if (activeWorkspace) {\r\n                const res = await onMutate({\r\n                    url: `/workspace/${selectedWorkspace}`,\r\n                    method: 'PUT',\r\n                    data: { name: values.name },\r\n                });\r\n                if (res.success) {\r\n                    const obj = { ...activeWorkspace, name: values.name };\r\n                    dispatch(updateWorkspace(obj));\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={defaultValues} validationSchema={schema} onSubmit={(values) => submitHandler(values)}>\r\n            {\r\n                ({ handleChange, handleSubmit, handleBlur, values, touched, errors }) => (\r\n                    <Box p={2} width=\"100%\">\r\n                        <Typography variant=\"h6\" className=\"bg-text-primary fw-700\" gutterBottom>\r\n                            Active Workspace\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\">\r\n                            Workspace Settings\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n                            Only workspace's owner is able to update these information.\r\n                        </Typography>\r\n\r\n                        <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n\r\n                            <div className=\"form-group\">\r\n                                <label className=\"bg-text-secondary\">Name *</label>\r\n                                <MyTextField\r\n                                    disabled={disabled}\r\n                                    fullWidth\r\n                                    placeholder=\"Workspace name\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    name=\"name\"\r\n                                    value={values.name}\r\n                                    error={touched.name && !!errors.name}\r\n                                    helperText={touched.name && errors.name}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <GroupWorkOutlined className=\"icons\" />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }} />\r\n                            </div>\r\n                            <Box className=\"form-group\">\r\n                                <label className=\"bg-text-secondary\">Workspace Owner</label>\r\n                                {\r\n                                    activeWorkspace && (<>\r\n                                        <Tooltip title={activeWorkspace.owner.name}>\r\n                                            <Avatar alt=\"user avatar\" src={activeWorkspace.owner.avatar ? `${baseURL}/files/${activeWorkspace.owner.avatar}` : userAvatar} />\r\n                                        </Tooltip>\r\n                                    </>)\r\n                                }\r\n                            </Box>\r\n                            <Box className=\"form-group\">\r\n                                <label className=\"bg-text-secondary\">Workspace members</label>\r\n                                <AvatarGroup max={6}>\r\n                                    {\r\n                                        activeWorkspace && activeWorkspace.members.map((item: UserModel) => (\r\n                                            <Tooltip key={item._id} title={item.name}>\r\n                                                <Avatar alt=\"member avatar\" src={item.avatar ? `${baseURL}/files/${item.avatar}` : userAvatar} />\r\n                                            </Tooltip>\r\n                                        ))\r\n                                    }\r\n                                </AvatarGroup>\r\n                            </Box>\r\n                            <Box textAlign=\"right\">\r\n                                <RemoveWorspaceContainer disabled={disabled} currentWorkspace={selectedWorkspace} />\r\n\r\n                                <RoundedButton variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                                    {loading ? 'Loading...' : 'Save'}\r\n                                </RoundedButton>\r\n                            </Box>\r\n                        </Form>\r\n                    </Box>\r\n                )\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n\r\ninterface RemoveWorspaceContainerProps {\r\n    disabled: boolean;\r\n    currentWorkspace: string | null;\r\n}\r\nconst RemoveWorspaceContainer: React.FC<RemoveWorspaceContainerProps> = ({ disabled, currentWorkspace }) => {\r\n    const { ConfirmDialog, handleOpen, handleClose } = useConfirmDialog({\r\n        onConfirmClick: onDelete,\r\n        message: 'Are you sure you want to delete this Workspace? All related members and projects will be unlikned.'\r\n    });\r\n    const { loading, onMutate } = useMutation();\r\n    const { DialogComponent, onDialogOpen, onDialogClose } = useDialog();\r\n\r\n    async function onDelete() {\r\n        try {\r\n            const res = await onMutate({\r\n                url: `/workspace/${currentWorkspace}`,\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (res.success) {\r\n                 handleClose();\r\n                 localStorage.removeItem('workspace');\r\n\r\n                 setTimeout(() => {\r\n                    onDialogOpen();\r\n                 })\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    if (!currentWorkspace) return null;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <RoundedButton variant=\"contained\" color=\"secondary\" onClick={handleOpen}\r\n                style={{ marginRight: '0.5rem' }} disabled={disabled}\r\n            >\r\n                {loading ? 'Loading...' : 'Delete'}\r\n            </RoundedButton>\r\n            <ConfirmDialog />\r\n            <DialogComponent>\r\n                <SessionExpired onDialogClose = {onDialogClose} />\r\n            </DialogComponent>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default ActiveWorkspaceSetting;\r\n","import React from 'react';\r\nimport {\r\n    Box\r\n} from '@material-ui/core';\r\n\r\nimport MyAccordion from '../../../components/MyAccordion';\r\nimport EmailSetting from './EmailSetting';\r\nimport PasswordSetting from './PasswordSetting';\r\nimport ActiveWorkspaceSetting from './ActiveWorkspaceSetting';\r\n\r\nconst Setting: React.FC = () => {\r\n    \r\n    return (\r\n\r\n        <Box p={2}>\r\n\r\n            <MyAccordion label=\"Workspace Setting\" isOpen = {true}>\r\n                <ActiveWorkspaceSetting />\r\n            </MyAccordion>\r\n\r\n            <MyAccordion label=\"Account Setting\">\r\n                <EmailSetting />\r\n            </MyAccordion>\r\n\r\n            <MyAccordion label=\"Security\">\r\n               <PasswordSetting />\r\n            </MyAccordion>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Setting;\r\n"],"sourceRoot":""}