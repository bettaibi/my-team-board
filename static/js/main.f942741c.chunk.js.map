{"version":3,"sources":["components/privateRoute/index.tsx","App.tsx","serviceWorkerRegistration.ts","store/reducers/board.reducer.ts","store/reducers/chat.reducer.ts","store/reducers/member.reducer.ts","store/reducers/project.reducer.ts","store/reducers/workspace.reducer.ts","store/index.ts","index.tsx","components/RoundedButton/index.tsx","store/actions/types.ts","components/AppSkeleton/index.tsx"],"names":["cookies","Cookies","PrivateRoute","path","Component","component","rest","get","to","Login","lazy","Register","ForgotPassword","Team","App","basename","CssBaseline","fallback","AppSkeleton","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","BoardReducer","action","type","ActionType","GET_BOARD","NEW_BOARD","payload","EDIT_BOARD","id","aspects","project","NEW_ASPECT","DELETE_ASPECT","filter","item","_id","EDIT_ASPECT","map","NEW_SPRINT","found","index","findIndex","aspect","cards","EDIT_SPRINT","DELETE_SPRINT","DELETE_BOARD","ChatReducer","GET_CHAT","SET_CHAT","key","hasOwnProperty","POST_MESSAGE","messages","INIT_CHAT","MemberReducer","GET_MEMBERS","SET_MEMBERS","NEW_MEMBER","DELETE_MEMBER","ProjectReducer","GET_PROJECTS","SET_PROJECTS","NEW_PROJECT","UPDATE_PROJECT","DELETE_PROJECT","WorkspaceReducer","GET_WORKSPACES","SET_WORKSPACES","NEW_WORKSPACE","UPDATE_WORKSPACE","DELETE_WORKSPACE","appReducer","combineReducers","workspaces","members","projects","boards","chat","axios","defaults","baseURL","process","withCredentials","interceptors","response","use","status","localStorage","clear","sessionStorage","remove","reload","store","createStore","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration","CustomRoundedButton","withStyles","theme","root","borderRadius","fontWeight","color","fontSize","Button","RoundedButton","React","forwardRef","props","ref","ADD_WORKSPACE","useStyles","makeStyles","hearder","zIndex","drawer","flexGrow","display","flexDirection","justifyContent","alignItems","backgroundColor","padding","height","boxShadow","position","top","mr","marginRight","spacing","mb","marginBottom","borderRedius","sidebar","width","minHeight","overflowY","bgSecondary","bgDarker","icons","largeAvatar","gridContainer","maxWidth","paper","cursor","mainRoot","boxSizing","MainSkeleton","classes","className","overflow","align","variant","gutterBottom","animation","size","container","x","xs","sm","md","lg","elevation","clsx","my","style","xsDown","borderRight","px","borderBottom","textAlign","p","mt","ml","flex-direction"],"mappings":"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","file":"static/js/main.f942741c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n \r\nconst cookies = new Cookies();\r\n\r\ninterface PrivateRouteProps{\r\n  exact?: boolean;\r\n  path: string;\r\n  component: React.ComponentType<any>;\r\n}\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({path,  component: Component, ...rest}) => {\r\n    const isLogged = cookies.get('isLogged');\r\n\r\n    if (isLogged == 'OK') {\r\n      return <Route path={path} component={Component} {...rest} />\r\n    }\r\n    else{\r\n      return <Redirect to = \"/login\" />;\r\n    }\r\n};\r\n\r\nexport default PrivateRoute;","import React, {lazy, Suspense} from 'react';\nimport { \n  CssBaseline,\n} from '@material-ui/core';\nimport {HashRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport PrivateRoute from './components/privateRoute';\nimport AppSkeleton from './components/AppSkeleton';\n\nconst Login = lazy(() => import('./pages/auth/Login'));\nconst Register = lazy(() => import('./pages/auth/Register'));\nconst ForgotPassword = lazy(() => import('./pages/auth/ForgotPassword'));\nconst Team = lazy(() => import('./pages/Team'));\n\nfunction App() {\n\n  return (\n    <HashRouter basename=\"/\">\n      <CssBaseline />\n      <Suspense fallback={<AppSkeleton />}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/team\" />\n          </Route>\n\n          <PrivateRoute path=\"/team\" component={Team} />\n\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\n        </Switch>\n      </Suspense>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' &&  'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { AspectModel, DynamicBoard, SprintModel } from '../../models/app.model';\r\nimport ActionType from '../actions/types';\r\n\r\ninterface ActionPayload{\r\n    type: string;\r\n    id?: string;\r\n    payload?: any;\r\n}\r\nconst BoardReducer = (state: DynamicBoard = {}, action: ActionPayload) => {\r\n\r\n    switch (action.type) {\r\n        case ActionType.GET_BOARD:\r\n            return {...state};\r\n\r\n        case ActionType.NEW_BOARD:\r\n            return {...state, ...action.payload};\r\n\r\n        case ActionType.EDIT_BOARD: {\r\n            if(action.id){\r\n                return {...state, [action.id]: {aspects: state[action.id].aspects, project: action.payload}};\r\n            }\r\n            else{ return {...state}};\r\n        }\r\n\r\n        case ActionType.NEW_ASPECT: \r\n            if(action.id){\r\n                let aspects = [...state[action.id].aspects, action.payload];\r\n                return {...state, [action.id]: {project: state[action.id].project, aspects} }\r\n            }\r\n            else{\r\n                return {...state};\r\n            }\r\n\r\n        case ActionType.DELETE_ASPECT:\r\n            if(action.id){\r\n                let aspects = [...state[action.id].aspects.filter((item: AspectModel) => {\r\n                    return item._id != action.payload\r\n                })];\r\n                return {...state, [action.id]: {project: state[action.id].project, aspects} } \r\n            }\r\n            else {return {...state}};\r\n\r\n        case ActionType.EDIT_ASPECT: \r\n        if(action.id){\r\n            let aspects = [...state[action.id].aspects.map((item: AspectModel) => {\r\n                return item._id != action.payload._id ? item: action.payload\r\n            })];\r\n            return {...state, [action.id]: {project: state[action.id].project, aspects} } \r\n        }\r\n        else{\r\n            return {...state};\r\n        }\r\n\r\n        case ActionType.NEW_SPRINT: \r\n            if(action.id){\r\n                let found = state[action.id].aspects;\r\n                let index = state[action.id].aspects.findIndex((item: AspectModel)=> {\r\n                    return item._id == action.payload.aspect\r\n                });\r\n                if(index > -1){\r\n                    found[index].cards = [...found[index].cards || [], action.payload];\r\n                    return {...state, [action.id]: {project: state[action.id].project, aspects: found} } \r\n                }\r\n                else{ return {...state}}\r\n            }\r\n            else {return {...state}}\r\n        \r\n        case ActionType.EDIT_SPRINT: \r\n        if(action.id){\r\n            let aspects = state[action.id].aspects;\r\n            let index = state[action.id].aspects.findIndex((item: AspectModel)=> {\r\n                return item._id == action.payload.aspect\r\n            });\r\n            if(index > -1 && aspects[index].cards){\r\n                aspects[index].cards = aspects[index].cards?.map((item: SprintModel)=> {\r\n                   return item._id != action.payload._id ? item : action.payload\r\n                });\r\n                return {...state, [action.id]: {project: state[action.id].project, aspects} } \r\n            }\r\n            else{ return {...state}}\r\n        }\r\n        else { return {...state}};\r\n\r\n        case ActionType.DELETE_SPRINT:\r\n            if(action.id){\r\n                let aspects = state[action.id].aspects;\r\n                let index = state[action.id].aspects.findIndex((item: AspectModel)=> {\r\n                    return item._id == action.payload.aspect\r\n                });\r\n                if(index > -1 && aspects[index].cards){\r\n                    aspects[index].cards = aspects[index].cards?.filter((item: SprintModel)=>{\r\n                        return item._id != action.payload._id\r\n                    });\r\n                    return {...state, [action.id]: {project: state[action.id].project, aspects} } \r\n                }\r\n                else{\r\n                    return {...state};\r\n                }\r\n            }\r\n            else{\r\n                return {...state};\r\n            }\r\n\r\n        case ActionType.DELETE_BOARD: \r\n        if(action.id){\r\n            delete state[action.id];\r\n            return {...state};\r\n        }\r\n        else{ return {...state}}\r\n\r\n        default: return {...state};\r\n    }\r\n};\r\n\r\nexport default BoardReducer;","import { ChatModel } from '../../models/app.model';\r\nimport ActionType from '../actions/types';\r\n\r\nconst ChatReducer = (state: ChatModel = {}, action: { type: string, payload?: any, key?: string }) => {\r\n\r\n    switch (action.type) {\r\n        case ActionType.GET_CHAT:\r\n            return {...state};\r\n        case ActionType.SET_CHAT:\r\n            if(action?.key && !state.hasOwnProperty(action?.key))\r\n            return {...state, [action.key]: [...action.payload]};\r\n            else\r\n            return {...state};\r\n        case ActionType.POST_MESSAGE:\r\n            if(action?.key && state.hasOwnProperty(action?.key || '')){\r\n                let messages = [...state[action.key], action.payload];\r\n                return {...state, [action.key]: messages};\r\n            }\r\n            return {...state};\r\n        case ActionType.INIT_CHAT: \r\n         return {};\r\n\r\n        default: return {...state}\r\n    }\r\n};\r\n\r\nexport default ChatReducer;","import { UserModel } from '../../models/app.model';\r\nimport ActionType from '../actions/types';\r\n\r\nconst MemberReducer = (state = [], action: {type: string, payload?: any}) => {\r\n\r\n    switch (action.type){\r\n        case ActionType.GET_MEMBERS:\r\n            return [...state]\r\n        case ActionType.SET_MEMBERS:\r\n            return [...action.payload]\r\n        case ActionType.NEW_MEMBER: \r\n            return [...state, {...action.payload}];\r\n        case ActionType.DELETE_MEMBER:\r\n            return [...state.filter((item: UserModel) => item._id != action.payload)];\r\n\r\n        default: return [...state];\r\n    }\r\n};\r\n\r\nexport default MemberReducer;","import { ProjectModel } from '../../models/app.model';\r\nimport ActionType from '../actions/types';\r\n\r\nconst ProjectReducer = (state = [], action: { type: string, payload?: any }) => {\r\n\r\n    switch (action.type) {\r\n        case ActionType.GET_PROJECTS:\r\n            return [...state]\r\n        case ActionType.SET_PROJECTS:\r\n            return [...action.payload]\r\n        case ActionType.NEW_PROJECT:\r\n            return [action.payload, ...state];\r\n        case ActionType.UPDATE_PROJECT:\r\n            return [...state.map((item: ProjectModel)=> item._id != action.payload._id? item: action.payload)]\r\n\r\n        case ActionType.DELETE_PROJECT:\r\n            return [...state.filter((item: ProjectModel)=> item._id != action.payload)];\r\n            \r\n        default: return [...state]\r\n    }\r\n};\r\n\r\nexport default ProjectReducer;","import { WorkspaceModel } from '../../models/app.model';\r\nimport ActionType from '../actions/types';\r\n\r\nconst WorkspaceReducer = (state = [], action: {type: string, payload?: any}) => {\r\n\r\n    switch (action.type){\r\n        case ActionType.GET_WORKSPACES:\r\n            return [...state]\r\n        case ActionType.SET_WORKSPACES:\r\n            return [...action.payload];\r\n        case ActionType.NEW_WORKSPACE:\r\n            return [...state, action.payload];\r\n        case ActionType.UPDATE_WORKSPACE:\r\n            return [...state.map((item: WorkspaceModel) => {return item._id == action.payload._id ? action.payload : item})];\r\n        case ActionType.DELETE_WORKSPACE:\r\n            return [...state.filter((item: WorkspaceModel) => {return item._id != action.payload})]\r\n        default: return [...state];\r\n    }\r\n};\r\n\r\nexport default WorkspaceReducer;","import { combineReducers } from 'redux';\r\nimport BoardReducer from './reducers/board.reducer';\r\nimport ChatReducer from './reducers/chat.reducer';\r\nimport MemberReducer from './reducers/member.reducer';\r\nimport ProjectReducer from './reducers/project.reducer';\r\nimport WorkspaceReducer from './reducers/workspace.reducer';\r\n\r\nconst appReducer = combineReducers({\r\n    workspaces: WorkspaceReducer,\r\n    members: MemberReducer,\r\n    projects: ProjectReducer, \r\n    boards: BoardReducer,\r\n    chat: ChatReducer\r\n});\r\n\r\nexport default appReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport axios from 'axios';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport appReducer from './store';\nimport { Provider } from 'react-redux';\nimport { createStore } from \"redux\";\n\nimport 'emoji-mart/css/emoji-mart.css';\nimport Cookies from 'universal-cookie';\n \nconst cookies = new Cookies();\n\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\naxios.defaults.withCredentials = true;\n\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n if (error.response.status === 401) {\n    localStorage.clear();\n    sessionStorage.clear();\n    cookies.remove(\"isLogged\");\n    window.location.reload();\n }\n return error;\n});\n\nconst store = createStore(appReducer);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();","import React from 'react';\r\nimport {\r\n    withStyles,\r\n    Theme\r\n} from '@material-ui/core/styles';\r\nimport { Button, ButtonProps } from '@material-ui/core';\r\n\r\nconst CustomRoundedButton = withStyles((theme: Theme) => ({\r\n    root: {\r\n      borderRadius: '9999px',\r\n      fontWeight: 500,\r\n      color: '#fafafa',\r\n      fontSize:'13px'\r\n    },\r\n}))(Button);\r\n\r\n\r\nconst RoundedButton: React.FC<ButtonProps> = React.forwardRef ((props, ref: any) => {\r\n    return (\r\n        <CustomRoundedButton {...props} ref = {ref} />\r\n    )\r\n});\r\n\r\nexport default RoundedButton;\r\n","\r\nconst ActionType = {\r\n    GET_WORKSPACES: 'GET_WORKSPACES',\r\n    SET_WORKSPACES: 'SET_WORKSPACES',\r\n    ADD_WORKSPACE: 'ADD_WORKSPACE',\r\n    GET_PROJECTS: 'GET_PROJECTS',\r\n    DELETE_WORKSPACE: 'DELETE_WORKSPACE',\r\n    SET_PROJECTS: 'SET_PROJECTS',\r\n    UPDATE_PROJECT: 'UPDATE_PROJECT',\r\n    DELETE_PROJECT: 'DELETE_PROJECT',\r\n    GET_MEMBERS: 'GET_MEMBERS',\r\n    SET_MEMBERS: 'SET_MEMBERS',\r\n    NEW_MEMBER: 'NEW_MEMBER',\r\n    NEW_PROJECT: 'NEW_PROJECT',\r\n    NEW_WORKSPACE: 'NEW_WORKSPACE',\r\n    UPDATE_WORKSPACE: 'UPDATE_WORKSPACE',\r\n    DELETE_MEMBER: 'DELETE_MEMBER',\r\n    GET_BOARD: 'GET_BOARD',\r\n    NEW_BOARD: 'NEW_BOARD',\r\n    EDIT_BOARD: 'EDIT_BOARD',\r\n    DELETE_BOARD: 'DELETE_BOARD',\r\n    NEW_ASPECT: 'NEW_ASPECT',\r\n    EDIT_ASPECT: 'EDIT_ASPECT',\r\n    DELETE_ASPECT: 'DELETE_ASPECT',\r\n    NEW_SPRINT: 'NEW_SPRINT',\r\n    EDIT_SPRINT: 'EDIT_SPRINT',\r\n    DELETE_SPRINT: 'DELETE_SPRINT',\r\n    GET_CHAT: 'GET_CHAT',\r\n    SET_CHAT:  'SET_CHAT',\r\n    INIT_CHAT: 'INIT_CHAT',\r\n    POST_MESSAGE: 'POST_MESSAGE'\r\n};\r\n\r\nexport default ActionType;","import React from 'react';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {\r\n    Theme,\r\n    makeStyles,\r\n    Box,\r\n    Typography,\r\n    Grid,\r\n    Hidden,\r\n    Paper\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport RoundedButton from '../RoundedButton';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    hearder: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: '0 1rem',\r\n        height: '56px',\r\n        boxShadow: '0 .125rem .25rem rgba(0,0,0,.075)',\r\n        position: 'sticky',\r\n        top: 0\r\n    },\r\n    mr: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    mb: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    borderRedius: {\r\n        borderRadius: '5px'\r\n    },\r\n    sidebar: {\r\n        width: '280px',\r\n        height: '100%',\r\n        minHeight: '100vh',\r\n        overflowY: 'hidden',\r\n        backgroundColor: '#0f172a'\r\n    },\r\n    bgSecondary: {\r\n        backgroundColor: '#475569'\r\n    },\r\n    bgDarker: {\r\n        backgroundColor: '#475569'\r\n    },\r\n    icons: {\r\n        color: '#64748B'\r\n    },\r\n    largeAvatar: {\r\n        width: theme.spacing(8),\r\n        height: theme.spacing(8),\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    gridContainer: {\r\n        maxWidth: '768px'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        cursor: 'pointer',\r\n        borderRadius: 10,\r\n    },\r\n    mainRoot: {\r\n        boxSizing: 'border-box',\r\n        padding: '2rem 1.5rem',\r\n        height: 'calc(100vh - 56px)'\r\n    }\r\n}));\r\n\r\nconst AppSkeleton = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container>\r\n            <Hidden xsDown>\r\n                <Grid item className={classes.sidebar}>\r\n                    <Grid container >\r\n                        <Grid item xs={3} style={{ borderRight: '1px solid #2c3344', height: '100vh' }}>\r\n                            <Box my={2} px={1} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                                <Skeleton variant=\"rect\" width={46} height={46} className={clsx(classes.bgDarker, classes.mb, classes.borderRedius)} />\r\n                                <Skeleton variant=\"rect\" width={46} height={46} className={clsx(classes.bgSecondary, classes.mb, classes.borderRedius)} />\r\n                                <Skeleton variant=\"rect\" width={46} height={46} className={clsx(classes.bgSecondary, classes.mb, classes.borderRedius)} />\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={9}>\r\n                            <Box px={2} borderBottom=\"1px solid #2c3344\" textAlign=\"center\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\"\r\n                                style={{ padding: '1.5rem 1rem' }}>\r\n                                <Skeleton className={clsx(classes.largeAvatar, classes.bgSecondary)} variant=\"circle\" />\r\n                                <Typography component=\"div\" variant=\"h5\" gutterBottom>\r\n                                    <Skeleton width={100} className={classes.bgSecondary} />\r\n                                </Typography>\r\n                                <Typography component=\"div\" variant=\"caption\">\r\n                                    <Skeleton width={140} className={classes.bgSecondary} />\r\n                                </Typography>\r\n                            </Box>\r\n\r\n                            <Box p={2} >\r\n                                <Typography component=\"div\" variant=\"body1\">\r\n                                    <Skeleton width={'100%'} className={classes.bgSecondary} />\r\n                                </Typography>\r\n                                <Typography component=\"div\" variant=\"caption\">\r\n                                    <Skeleton width={120} className={classes.bgSecondary} />\r\n                                </Typography>\r\n\r\n                                <Typography component=\"div\" variant=\"h2\">\r\n                                    <Skeleton width={'100%'} className={classes.bgSecondary} />\r\n                                </Typography>\r\n                            </Box>\r\n\r\n                            <Box p={2} >\r\n                                <Typography component=\"div\" variant=\"body1\">\r\n                                    <Skeleton width={'100%'} className={classes.bgSecondary} />\r\n                                </Typography>\r\n                                <Typography component=\"div\" variant=\"caption\">\r\n                                    <Skeleton width={120} className={classes.bgSecondary} />\r\n                                </Typography>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"row\" mt={2}>\r\n                                    <Skeleton className={classes.bgSecondary} animation=\"wave\" variant=\"circle\" width={40} height={40} />\r\n                                    <Box ml={1}>\r\n                                        <Typography component=\"div\" variant=\"caption\">\r\n                                            <Skeleton width={120} className={classes.bgSecondary} />\r\n                                        </Typography>\r\n                                        <Typography component=\"div\" variant=\"caption\">\r\n                                            <Skeleton width={80} className={classes.bgSecondary} />\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                <Box display=\"flex\" flexDirection=\"row\" mt={2}>\r\n                                    <Skeleton className={classes.bgSecondary} animation=\"wave\" variant=\"circle\" width={40} height={40} />\r\n                                    <Box ml={1}>\r\n                                        <Typography component=\"div\" variant=\"caption\">\r\n                                            <Skeleton width={120} className={classes.bgSecondary} />\r\n                                        </Typography>\r\n                                        <Typography component=\"div\" variant=\"caption\">\r\n                                            <Skeleton width={80} className={classes.bgSecondary} />\r\n                                        </Typography>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Hidden>\r\n\r\n            <Grid item xs={12} sm>\r\n                <header className={classes.hearder}>\r\n                    <Skeleton variant=\"circle\" width={40} height={40} />\r\n                    <Box display=\"flex\" flex-direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <Skeleton className={classes.mr} variant=\"circle\" width={40} height={40} />\r\n                        <Skeleton className={classes.mr} variant=\"circle\" width={40} height={40} />\r\n                        <Skeleton variant=\"circle\" width={40} height={40} />\r\n                    </Box>\r\n                </header>\r\n\r\n                <MainSkeleton />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst MainSkeleton = () => {\r\n    const classes = useStyles();\r\n    const cards = [1, 2, 3,4,5,6];\r\n\r\n    return (\r\n        <Box className={classes.mainRoot} overflow=\"auto\"\r\n            display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\" gutterBottom>\r\n                <Skeleton animation=\"wave\" width={220} />\r\n            </Typography>\r\n            <RoundedButton variant=\"outlined\" color=\"default\" size=\"large\" className={classes.mb}>\r\n                <Skeleton animation=\"wave\" width={120} />\r\n            </RoundedButton>\r\n            <Grid container spacing={2} className={classes.gridContainer}>\r\n                {\r\n                    cards.map((x: number) => (\r\n                        <Grid key={x} item xs={12} sm={6} md={4} lg={4}>\r\n                            <Paper elevation={3} className={clsx('bg-white', classes.paper)}>\r\n                                <Typography component=\"div\" variant=\"body1\">\r\n                                    <Skeleton animation=\"wave\" width={'100%'}/>\r\n                                </Typography>\r\n                                <Typography component=\"div\" variant=\"caption\">\r\n                                    <Skeleton animation=\"wave\" width={120} />\r\n                                </Typography>\r\n                                <Box display=\"flex\" flexDirection=\"row\" my={1}>\r\n                                  <Skeleton variant=\"circle\" animation=\"wave\" height={40} width={40} style={{marginRight:'2px'}} />\r\n                                  <Skeleton variant=\"circle\" animation=\"wave\" height={40} width={40} style={{marginRight:'2px'}} />\r\n                                  <Skeleton variant=\"circle\" animation=\"wave\" height={40} width={40} style={{marginRight:'2px'}} />\r\n                                </Box>\r\n                                <Typography component=\"div\" variant=\"caption\">\r\n                                    <Skeleton animation=\"wave\" width={140} />\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default AppSkeleton;\r\n"],"sourceRoot":""}