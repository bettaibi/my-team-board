{"version":3,"sources":["hooks/useSidenav/index.tsx","hooks/useConfirmDialog/index.tsx","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","../node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js","../node_modules/@material-ui/icons/esm/DeleteOutline.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","pages/Team/Members/NewMember.tsx","pages/Team/Members/index.tsx"],"names":["useStyles","makeStyles","theme","drawerOpen","breakpoints","down","width","drawerClose","useSidenav","anchor","variant","state","classes","useToggle","onSidenavClose","handleClose","onSidenavOpen","handleOpen","show","onSidenavToggle","toggle","SidenavComponent","children","transitionDuration","enter","exit","open","onClose","className","clsx","paper","overflow","useConfirmDialog","obj","message","onConfirmClick","ConfirmDialog","useCallback","maxWidth","dividers","style","padding","size","onClick","color","InputAdornment","React","props","ref","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","other","_objectWithoutProperties","muiFormControl","useFormControl","FormControlContext","Provider","value","_extends","root","positionEnd","positionStart","hiddenLabel","filled","margin","marginDense","Typography","withStyles","display","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","name","DialogContent","_props$dividers","flex","WebkitOverflowScrolling","overflowY","paddingTop","borderTop","concat","palette","divider","borderBottom","DialogActions","_props$disableSpacing","disableSpacing","spacing","justifyContent","createSvgIcon","d","ListItemAvatar","context","ListContext","alignItemsFlexStart","minWidth","flexShrink","ListItemText","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","type","multiline","marginBottom","paddingLeft","ListItemSecondaryAction","muiName","cancelToken","right","top","transform","InitialValue","_id","email","title","NewMember","useState","loading","setLoading","options","setOptions","selectedUser","setSelectedUser","dispatch","useSharedContext","useMutation","mutatioLoading","onMutate","handleSeachChange","e","a","term","target","cancel","axios","CancelToken","source","get","token","data","success","console","error","url","method","params","workspaceId","localStorage","getItem","memberId","res","newMember","initialValues","onSubmit","handleSubmit","autoComplete","Box","backgroundColor","flexDirection","RoundedButton","disableElevation","gutterBottom","Autocomplete","onChange","newValue","onEmailSelected","fullWidth","getOptionSelected","option","getOptionLabel","clearOnBlur","selectOnFocus","renderInput","MyTextField","placeholder","disabled","createStyles","background","paddingBottom","listItem","cursor","search","searchFabButton","AddMember","currentUser","owner","Fragment","Fab","Add","DeleteMember","selectedWorkspace","showMsg","useNotificationContext","delete","setTimeout","deleteMember","IconButton","DeleteOutline","Members","members","useSelector","list","setList","setTerm","useEffect","newState","filter","item","toLowerCase","includes","p","length","my","InputProps","startAdornment","SearchOutlined","List","aria-label","map","ListItem","Avatar","src","avatar","process","userAvatar","Divider","mt"],"mappings":"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","file":"static/js/15.f644d4f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport useToggle from '../useToggle';\r\nimport { Box } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\ntype Anchors = 'left' | 'right' | 'top' | 'bottom';\r\ntype Variant = 'temporary' | 'permanent' | 'persistent';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n\r\n    drawerOpen: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100%'\r\n        },\r\n        width: '40%',\r\n    },\r\n    drawerClose: {\r\n        width: 0,\r\n    },\r\n}));\r\n\r\nconst useSidenav = (anchor: Anchors, variant: Variant, state?: boolean) => {\r\n    const classes = useStyles();\r\n    const { handleClose: onSidenavClose, handleOpen: onSidenavOpen, show, toggle: onSidenavToggle } = useToggle(state || false);\r\n\r\n    const SidenavComponent: React.FC = ({ children }) => {\r\n\r\n        return (\r\n            <Drawer\r\n            transitionDuration={{ enter: 500, exit: 1000 }}\r\n                variant={variant}\r\n                anchor={anchor}\r\n                open={show}\r\n                onClose={onSidenavClose}\r\n                className={clsx({\r\n                    [classes.drawerOpen]: show,\r\n                    [classes.drawerClose]: !show,\r\n                  })}\r\n                classes={{\r\n                    paper: clsx({\r\n                      [classes.drawerOpen]: show,\r\n                      [classes.drawerClose]: !show,\r\n                    }),\r\n                  }} >\r\n                <Box overflow=\"hidden\">\r\n                    {children}\r\n                </Box>\r\n            </Drawer>\r\n        )\r\n    };\r\n\r\n    return {\r\n        onSidenavClose,\r\n        onSidenavOpen,\r\n        onSidenavToggle,\r\n        SidenavComponent,\r\n        show\r\n    };\r\n\r\n};\r\n\r\nexport default useSidenav;","import { useCallback } from 'react';\r\nimport {\r\n    Typography,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    Button\r\n} from '@material-ui/core';\r\nimport useToggle from '../useToggle';\r\n\r\ninterface ConfirmDialogProps {\r\n    message: string;\r\n    onConfirmClick: () => void;\r\n}\r\nconst useConfirmDialog = (obj: ConfirmDialogProps) => {\r\n    const { show, handleClose, handleOpen } = useToggle();\r\n    const { message, onConfirmClick } = obj;\r\n\r\n    const ConfirmDialog = useCallback(() => (\r\n        <Dialog open={show} onClose={handleClose} maxWidth=\"xs\">\r\n            <DialogContent dividers style={{padding: '1.2rem 1rem'}}>\r\n                <Typography variant=\"h6\" >\r\n                    Confirm\r\n                </Typography>\r\n                <span>\r\n                    {message}\r\n                </span>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button size=\"small\" onClick={handleClose}>Close</Button>\r\n                <Button size=\"small\" variant=\"contained\" color=\"primary\"\r\n                    onClick={onConfirmClick}>Confirm</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    ), [show, message, handleClose, onConfirmClick]);\r\n\r\n    return {\r\n        handleClose,\r\n        handleOpen,\r\n        ConfirmDialog\r\n    }\r\n};\r\n\r\nexport default useConfirmDialog;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import React from 'react';\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n    Typography,\r\n    Box,\r\n} from '@material-ui/core';\r\nimport MyTextField from '../../../components/MyTextField';\r\nimport RoundedButton from '../../../components/RoundedButton';\r\nimport axios, { CancelTokenSource } from 'axios';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { UserModel } from '../../../models/app.model';\r\nimport { useSharedContext } from '../../../context';\r\nimport { newMember } from '../../../store/actions/members.actions';\r\nimport useMutation from '../../../hooks/useMutation';\r\n\r\nconst InitialValue = {\r\n    _id: '',\r\n    name: '',\r\n    email: '',\r\n    title: '',\r\n};\r\n\r\nlet cancelToken: CancelTokenSource;\r\n\r\ninterface NewMemberProps {\r\n    onSidenavClose: () => void;\r\n}\r\n\r\nconst NewMember: React.FC<NewMemberProps> = ({ onSidenavClose }) => {\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [options, setOptions] = React.useState<UserModel[]>([]);\r\n    const [selectedUser, setSelectedUser] = React.useState<UserModel>(InitialValue);\r\n    const { dispatch } = useSharedContext();\r\n    const { loading: mutatioLoading, onMutate } = useMutation();\r\n\r\n    const handleSeachChange = async (e: any) => {\r\n        const term = e.target.value;\r\n\r\n        if(term === ''){\r\n            setSelectedUser(InitialValue);\r\n        }\r\n\r\n        if (typeof cancelToken != typeof undefined) {\r\n            cancelToken?.cancel('Operation cancled');\r\n        }\r\n\r\n        cancelToken = axios.CancelToken.source();\r\n\r\n        try {\r\n            if (term) {\r\n                setLoading(true);\r\n                const { data } = await axios.get(`/members/search/${term}`, { cancelToken: cancelToken.token });\r\n                if(data.success) {\r\n                    setOptions(data.data)\r\n                }\r\n                setLoading(false);\r\n            }\r\n\r\n        }\r\n        catch (err) {\r\n            console.error(err.message || err)\r\n        }\r\n    };\r\n\r\n    function onEmailSelected(newValue: any){\r\n        if(newValue !== null){\r\n            setSelectedUser({...newValue, title: newValue.title || 'Title does not mention'});\r\n        }\r\n    }\r\n\r\n    async function submitHandler(){\r\n        try{\r\n            if(selectedUser?.email !== ''){\r\n                const res = await onMutate({\r\n                    url: '/workspace/addMember',\r\n                    method: 'PATCH',\r\n                    data: null,\r\n                    params: {\r\n                        workspaceId: localStorage.getItem('workspace'),\r\n                        memberId: selectedUser._id\r\n                    }\r\n                });\r\n                if(res.success){\r\n                    setSelectedUser(InitialValue);\r\n                    dispatch(newMember(res.data));\r\n                }\r\n            }\r\n        }\r\n        catch(err){\r\n            console.error(err.message || err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={selectedUser} onSubmit={submitHandler}>\r\n            {\r\n                ({ handleSubmit }) => (\r\n                    <Form onSubmit={handleSubmit} autoComplete=\"off\" >\r\n                        <Box style={{ backgroundColor: '#f1f5f9', padding: '2.5rem 1rem' }} borderBottom=\"1px solid #fafafa\"\r\n                            display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n\r\n                            <div></div>\r\n                            <Box>\r\n                                <RoundedButton className=\"bg-text-secondary\" onClick={onSidenavClose} variant=\"outlined\" color=\"default\" size=\"medium\" type=\"button\">\r\n                                    Cancel\r\n                                </RoundedButton>\r\n                                <RoundedButton disableElevation size=\"medium\" type=\"submit\" style={{ marginLeft: '0.5rem' }} variant=\"contained\" color=\"primary\">\r\n                                    {mutatioLoading?'Loading...':'Save'}\r\n                                </RoundedButton>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box style={{ padding: '1rem 1rem 0 1rem' }}>\r\n                            <Typography variant=\"subtitle1\" className=\"bg-text-primary fw-700\">\r\n                                Add Member\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle2\" color=\"textSecondary\" gutterBottom>\r\n                                Add a new member to the current workspace.\r\n                            </Typography>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Email</label>\r\n                                <Autocomplete\r\n                                onChange={(e, newValue)=> onEmailSelected(newValue)}\r\n                                fullWidth\r\n                                getOptionSelected={(option, value) => option.email === value.email}\r\n                                getOptionLabel={(option) => option.email}\r\n                                options={options}\r\n                                loading={loading}\r\n                                clearOnBlur\r\n                                selectOnFocus={false}\r\n                                renderInput={(params) => (\r\n                                    <MyTextField {...params} fullWidth name=\"email\" variant=\"outlined\" size=\"small\" placeholder=\"member's Email\"\r\n                                    onChange={(e) => handleSeachChange(e)}\r\n                                    value={selectedUser.email}\r\n                                    />\r\n                                )}\r\n                            />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Name</label>\r\n                                <MyTextField fullWidth name=\"name\" variant=\"outlined\" size=\"small\" placeholder=\"member's name\"\r\n                                    value={selectedUser.name} disabled />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Title</label>\r\n                                <MyTextField fullWidth name=\"title\" variant=\"outlined\" size=\"small\" placeholder=\"member's title\"\r\n                                    value={selectedUser.title} disabled />\r\n                            </div>\r\n                        </Box>\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default NewMember;","import React from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Fab,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemSecondaryAction,\r\n    Divider,\r\n    ListItemAvatar,\r\n    Avatar,\r\n    InputAdornment,\r\n    IconButton,\r\n} from '@material-ui/core';\r\nimport { DeleteOutline } from '@material-ui/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { Add, SearchOutlined } from '@material-ui/icons';\r\nimport { AppState, UserModel } from '../../../models/app.model';\r\nimport { useSharedContext } from '../../../context';\r\nimport { deleteMember } from '../../../store/actions/members.actions';\r\nimport { useNotificationContext } from '../../../context/NotificationContext';\r\n\r\nimport useConfirmDialog from '../../../hooks/useConfirmDialog';\r\nimport useSidenav from '../../../hooks/useSidenav';\r\nimport MyTextField from '../../../components/MyTextField';\r\nimport NewMember from './NewMember';\r\nimport userAvatar from '../../../assets/avatars/profile.jpg'\r\nimport axios from 'axios';\r\n\r\nconst baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.paper,\r\n            paddingBottom: '0 !important',\r\n        },\r\n        listItem: {\r\n            cursor: 'pointer',\r\n            '&:hover': {\r\n                backgroundColor: '#f1f5f9'\r\n            }\r\n        },\r\n        search: {\r\n            [theme.breakpoints.down('xs')]: {\r\n                flexDirection: 'column'\r\n            },\r\n        },\r\n        searchFabButton: {\r\n            [theme.breakpoints.down('xs')]: {\r\n                marginLeft: '0 !important',\r\n                width: '100%',\r\n            },\r\n        }\r\n    }),\r\n);\r\n\r\nconst Members = () => {\r\n    const classes = useStyles();\r\n    const members = useSelector((state: AppState) => state.members);\r\n    const [list, setList] = React.useState<UserModel[]>(members);\r\n    const [term, setTerm] = React.useState<string>('');\r\n\r\n    React.useEffect(()=> {\r\n        if(term === ''){\r\n            setList(members);\r\n        }\r\n        else{\r\n            let newState = [...members].filter((item: UserModel) => { return item.name.toLowerCase().includes(term.toLowerCase())});\r\n            setList(newState);\r\n        }\r\n    }, [members, term]);\r\n\r\n    function onChangeHandler(e: React.ChangeEvent<HTMLInputElement>){\r\n        if(e){\r\n            setTerm(e.target.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box className=\"bg-white\" width=\"100%\" height=\"100%\">\r\n            <Box p={3}>\r\n                <Typography variant=\"h4\" className=\"bg-text-primary fw-700\">\r\n                    Members\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    {members.length > 0 ? members.length : 'Add a new '} contacts\r\n                </Typography>\r\n                <Box display=\"flex\" flexDirection=\"row\" my={2} className={classes.search}>\r\n                    <MyTextField onChange={onChangeHandler} style={{ marginBottom: '0.5rem' }} value={term}\r\n                    fullWidth variant=\"outlined\" placeholder=\"Search members\" size=\"small\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <SearchOutlined color=\"disabled\" />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <AddMember />\r\n                </Box>\r\n            </Box>\r\n\r\n            <List component=\"nav\" className={classes.root} aria-label=\"Members list\">\r\n                {list.map((item: UserModel) => (\r\n                    <React.Fragment key={item._id}>\r\n                        <ListItem className={classes.listItem}>\r\n                            <ListItemAvatar>\r\n                                <Avatar src={item.avatar? `${baseURL}/files/${item.avatar}` : userAvatar} />\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={item.name} secondary={item.title || 'Title not mentioned'} />\r\n                            <ListItemSecondaryAction>\r\n                                <DeleteMember memberId={item._id || ''} />\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </List>\r\n\r\n            {\r\n                list.length === 0 && (\r\n                    <Box mt={4} p={3}>\r\n                        <Typography variant=\"subtitle2\" component=\"div\" color=\"textSecondary\" gutterBottom>\r\n                            No Members found\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"small\" color=\"textSecondary\" gutterBottom>\r\n                            Only the owner of the selected workspace has the ability to add or remove members.\r\n                        </Typography>\r\n                    </Box>\r\n                )\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst AddMember = () => {\r\n    const classes = useStyles();\r\n    const { onSidenavClose, onSidenavOpen, SidenavComponent } = useSidenav('right', 'persistent');\r\n    const { currentUser, owner } = useSharedContext();\r\n    let disabled = !(owner === currentUser._id);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Fab onClick={onSidenavOpen} className={classes.searchFabButton} variant=\"extended\" color=\"primary\" size=\"medium\" \r\n             disabled={disabled} style={{ marginLeft: '1rem', minWidth: '120px' }}>\r\n                <Add style={{ marginRight: '0.4rem' }} />\r\n                <span>Add</span>\r\n            </Fab>\r\n\r\n            <SidenavComponent>\r\n                <div style={{ overflowY: 'auto', height: 'calc(100% - 56px)', marginTop: '56px', }}>\r\n                    <NewMember onSidenavClose={onSidenavClose} />\r\n                </div>\r\n            </SidenavComponent>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst DeleteMember = ({ memberId }: { memberId: string }) => {\r\n    const { ConfirmDialog, handleOpen, handleClose } = useConfirmDialog({\r\n        onConfirmClick: onDelete,\r\n        message: 'Are you sure you want to delete this member? This member would be unlinked to all related projects.'\r\n    });\r\n    const { dispatch, selectedWorkspace, owner, currentUser } = useSharedContext();\r\n    let disabled = !(owner === currentUser._id);\r\n    const { showMsg } = useNotificationContext();\r\n\r\n    async function onDelete() {\r\n        try {\r\n            if (memberId && selectedWorkspace) {\r\n                const { data } = await axios.delete(`/workspace/members/${memberId}/${selectedWorkspace}`);\r\n                if (data.success) {\r\n                    showMsg(data.message, 'success') \r\n                    setTimeout(()=> {\r\n                        dispatch(deleteMember(memberId));\r\n                    });\r\n                }\r\n                else{\r\n                    showMsg(data.message, 'error')\r\n\r\n                    setTimeout(()=> {\r\n                     handleClose()\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IconButton onClick={handleOpen} disabled={disabled}>\r\n                <DeleteOutline />\r\n            </IconButton>\r\n\r\n            <ConfirmDialog />\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default Members;\r\n"],"sourceRoot":""}